var _l=function(n){"use strict";const t=(n,t)=>typeof n===t,r=n=>t(n,"function"),o=n=>r(n.callee),e=Array.isArray,i=(n,t)=>n instanceof t,u=n=>i(n,ArrayBuffer),c=n=>t(n,"undefined"),f=n=>c(n)||null===n,s=n=>!f(n)&&t(n,"object"),a=n=>s(n)&&!c(n.length),l=n=>t(n,"number"),h=n=>l(n.BYTES_PER_ELEMENT),m=n=>t(n,"boolean"),p=n=>i(n,Date),b=n=>t(n,"string"),g=n=>{if(f(n))return-1;if(a(n)||b(n))return n.length;if(!c(n.size))return n.size;if(s(n))return Object.keys(n).length;return-1},y=n=>g(n)<1,j=(n,t)=>{Object.entries(n).forEach((r,o)=>{t(r[0],r[1],o,n)})},C=(n,t)=>{if(n===t)return!0;if(!s(n)||!s(t)||Object.keys(n).length!==Object.keys(t).length)return!1;let r=!0;j(n,(n,o)=>{!0===r&&(r=!c(t[n])&&C(o,t[n]))});return r},E=n=>i(n,Error),A=n=>Number.isInteger(n)&&n>=0,d=n=>i(n,Map),M=n=>!f(n)&&(t(n,"object")||t(n,"function")),S=n=>M(n)&&n.constructor===Object,D=n=>r(n.then)&&r(n.catch),O=n=>i(n,RegExp),w=n=>i(n,Set),T=n=>t(n,"symbol"),k=(n,t)=>{let r=n;let o=0;for(;!c(r)&&o<t.length;){const n=t[o];if(c(r[n]))return null;r=r[n],o++}return r},F=(n,t)=>!f(k(n,t)),L=n=>n.reduce((n,t)=>n+t),I=n=>L(n)/n.length,P=(n,t)=>{let r=0;let o=n.length-1;let e;for(;r<=o;){const i=n[e=Math.floor(r+(o-r)/2)];if(i===t)return e;i<t?r=e+1:o=e-1}return null},B=(n,t,r)=>{if(n<t)return t;if(n>r)return r;return n},N=n=>{const t=n.length/2;return n.length%2==0?n[t]:I(n.slice(Math.floor(t),2))},R=(n,t)=>{const r=n.length;const o=t.length;if(0===r)return o;if(0===o)return r;const e=[];for(let n=0;n<=o;n++)e[n]=[n];for(let n=0;n<=r;n++)e[0][n]=n;for(let i=1;i<=o;i++){const o=e[i],u=e[i-1];for(let e=1;e<=r;e++)if(t.charAt(i-1)===n.charAt(e-1))o[e]=u[e-1];else{const n=u[e-1]+1,t=o[e-1]+1,r=u[e]+1;o[e]=Math.min(n,t,r)}}return e[o][r]},_=n=>n.filter(n=>n),v=n=>{const t=[];let r=[];n.split("").forEach((n,o)=>{o>0&&n!==n.toLowerCase()&&(t.push(r.join("")),r=[]);r.push(n)});t.push(r.join(""));return _(t)},x=v,U=n=>_(n.split("-")),z=n=>_(n.split("_")),q=(n,t)=>{const r=new Map;n.forEach((o,e)=>{const i=t(o,e,n);r.set(i,r.has(i)?[...r.get(i),o]:[o])});return r},K=(n,t,r=!1)=>{const o=q(t,t=>R(n,t));return r?o:o.get(Math.min(...o.keys()))},W=n=>n.map((n,t)=>0===t?n.toLowerCase():n.substr(0,1).toUpperCase()+n.substr(1).toLowerCase()).join(""),Y=n=>n.map(n=>n.toLowerCase()).join("-"),G=n=>n.map(n=>n.substr(0,1).toUpperCase()+n.substr(1).toLowerCase()).join(""),H=n=>n.map(n=>n.toLowerCase()).join("_"),J=(n,t)=>{if(!A(t)||0===t)return[];const r=[];for(let o=0;o<n.length;o+=t)r.push(n.slice(o,o+t));return r},Q=n=>{const t=new Map;n.forEach(n=>t.set(n,t.has(n)?t.get(n)+1:1));return t},V=(n,...t)=>{const r=Q([].concat(...t));return n.filter(n=>!r.has(n))},X=(n,t)=>n.map((r,o)=>e(r)?X(r,t):t(r,o,n)),Z=n=>X(Array.from(n),n=>e(n)?Array.from(n):n),$=(n,...t)=>{const r=Q([].concat(...t));return n.filter(n=>r.has(n))},nn=(n,t)=>n.filter((n,r)=>r!==t),tn=(n,t)=>n.filter(n=>n!==t),rn=(n,t)=>n.filter((n,r)=>r%t==0),on=n=>Array.from(new Set(n)),en=(n,t)=>{const r={};j(n,(o,e,i)=>{r[o]=t(o,e,i,n)});return r},un=(n,t=(()=>null),r=new WeakSet)=>{r.add(n);return en(n,(n,o,e,i)=>{if(r.has(o))return t(n,o,e,i);if(s(o))return r.add(o),un(o,t,r);return o})},cn=n=>Object.assign({},n),fn=(n,t)=>{const r=e(n)?Array.from(n):cn(n);j(t,(t,o)=>{c(n[t])&&(r[t]=o)});return r},sn=(n,t)=>en(n,(n,r,o,e)=>s(r)?sn(r,t):t(n,r,o,e)),an=n=>sn(cn(n),(n,t)=>s(t)?cn(t):t),ln=(n,t)=>{const r=e(n)?Array.from(n):an(n);j(t,(t,o)=>{const e=n[t];s(o)?r[t]=s(e)?ln(e,o):o:r[t]=c(e)?o:e});return r},hn=n=>new Map(Object.entries(n)),mn=(n,t)=>n.forEach((r,o)=>e(r)?mn(r,t):t(r,o,n)),pn=(n,t)=>j(n,(r,o,e)=>s(o)?pn(o,t):t(r,o,e,n)),bn=(n,...t)=>{try{return n(...t)}catch(n){return n}},gn=(n,t=n.length)=>{const r=function(){const o=arguments;return function(){const e=[...o,...arguments];return(e.length>=t?n:r)(...e)}};return r()},yn=(n,t,r=!1)=>{const o=()=>setTimeout(()=>{e=!0;clearTimeout(i)},t);let e=r;let i=r?-1:o();return function(){if(e)return e=!1,i=o(),n(...arguments)}},jn=(n=0,t=1,r=!1)=>{const o=t-n;if(0===o)return n;const e=Math.random()*o;return n+(r?e:Math.floor(e/o*(o+1)))},Cn=n=>n[jn(0,n.length-1)],En=n=>{const t=Array.from(n);let r=t.length;for(;r--;){const n=jn(0,r),o=t[r];t[r]=t[n],t[n]=o}return t};return n.isEqual=C,n.isInstanceOf=i,n.isTypeOf=t,n.isUndefined=c,n.isNil=f,n.isNumber=l,n.isString=b,n.isBoolean=m,n.isSymbol=T,n.isObject=M,n.isObjectLike=s,n.isObjectPlain=S,n.isArray=e,n.isArrayLike=a,n.isArrayBuffer=u,n.isArrayTyped=h,n.isPromise=D,n.isMap=d,n.isSet=w,n.isDate=p,n.isRegExp=O,n.isFunction=r,n.isArguments=o,n.isError=E,n.isEmpty=y,n.isIndex=A,n.hasPath=F,n.getPath=k,n.getSize=g,n.numClamp=B,n.numSum=L,n.numAverage=I,n.numMedian=N,n.numBinarySearch=P,n.strDistance=R,n.strSimilar=K,n.strFromCamelCase=x,n.strFromKebabCase=U,n.strFromPascalCase=v,n.strFromSnakeCase=z,n.strToCamelCase=W,n.strToKebabCase=Y,n.strToPascalCase=G,n.strToSnakeCase=H,n.arrFromDeep=Z,n.arrMapDeep=X,n.arrCompact=_,n.arrChunk=J,n.arrStep=rn,n.arrRemoveIndex=nn,n.arrRemoveItem=tn,n.arrCount=Q,n.arrCollect=q,n.arrDifference=V,n.arrIntersection=$,n.arrUniq=on,n.objFrom=cn,n.objFromDeep=an,n.objMap=en,n.objMapDeep=sn,n.objDefaults=fn,n.objDefaultsDeep=ln,n.objDecycle=un,n.mapFromObject=hn,n.fnThrottle=yn,n.fnAttempt=bn,n.fnCurry=gn,n.forEachDeep=mn,n.forEachEntry=j,n.forEachEntryDeep=pn,n.randNumber=jn,n.randItem=Cn,n.randShuffle=En,n}({});
//# sourceMappingURL=lightdash.min.js.map
