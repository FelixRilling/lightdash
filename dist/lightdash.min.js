var _l=function(n){"use strict";const t=(n,t)=>typeof n===t,r=n=>t(n,"function"),e=n=>r(n.callee),o=Array.isArray,i=(n,t)=>n instanceof t,u=n=>i(n,ArrayBuffer),c=n=>t(n,"undefined"),f=n=>c(n)||null===n,a=n=>!f(n)&&t(n,"object"),s=n=>a(n)&&!c(n.length),l=n=>t(n,"number"),h=n=>l(n.BYTES_PER_ELEMENT),m=n=>t(n,"boolean"),g=n=>i(n,Date),p=n=>t(n,"string"),y=n=>{if(f(n))return-1;if(s(n)||p(n))return n.length;if(!c(n.size))return n.size;if(a(n))return Object.keys(n).length;return-1},b=n=>y(n)<1,j=(n,t)=>{Object.entries(n).forEach((r,e)=>{t(r[0],r[1],e,n)})},E=(n,t)=>{if(n===t)return!0;if(!a(n)||!a(t)||Object.keys(n).length!==Object.keys(t).length)return!1;let r=!0;j(n,(n,e)=>{!0===r&&(r=!c(t[n])&&E(e,t[n]))});return r},d=n=>i(n,Error),A=n=>Number.isInteger(n)&&n>=0,M=n=>i(n,Map),D=n=>!f(n)&&(t(n,"object")||t(n,"function")),O=n=>D(n)&&n.constructor===Object,S=n=>r(n.then)&&r(n.catch),k=n=>i(n,RegExp),I=n=>i(n,Set),T=n=>t(n,"symbol"),C=(n,t)=>{let r=n;let e=0;for(;!c(r)&&e<t.length;){const n=t[e];if(c(r[n]))return null;r=r[n],e++}return r},w=(n,t)=>!f(C(n,t)),B=n=>n.reduce((n,t)=>n+t),F=n=>B(n)/n.length,N=(n,t,r)=>{if(n<t)return t;if(n>r)return r;return n},P=n=>{const t=n.length/2;return n.length%2==0?n[t]:F(n.slice(Math.floor(t),2))},R=(n,t)=>{if(!A(t)||0===t)return[];const r=[];for(let e=0;e<n.length;e+=t)r.push(n.slice(e,e+t));return r},v=(n,t)=>{const r=new Map;n.forEach((e,o)=>{const i=t(e,o,n);r.set(i,r.has(i)?[...r.get(i),e]:[e])});return r},x=n=>n.filter(n=>n),z=n=>{const t=new Map;n.forEach(n=>t.set(n,t.has(n)?t.get(n)+1:1));return t},L=(n,...t)=>{const r=z([].concat(...t));return n.filter(n=>!r.has(n))},_=(n,t)=>n.map((r,e)=>o(r)?_(r,t):t(r,e,n)),q=n=>_(Array.from(n),n=>o(n)?Array.from(n):n),U=(n,...t)=>{const r=z([].concat(...t));return n.filter(n=>r.has(n))},W=(n,t)=>n.filter((n,r)=>r!==t),Y=(n,t)=>n.filter(n=>n!==t),G=(n,t)=>n.filter((n,r)=>r%t==0),H=n=>Array.from(new Set(n)),J=(n,t)=>{const r={};j(n,(e,o,i)=>{r[e]=t(e,o,i,n)});return r},K=(n,t=(()=>null),r=new WeakSet)=>{r.add(n);return J(n,(n,e,o,i)=>{if(r.has(e))return t(n,e,o,i);if(a(e))return r.add(e),K(e,t,r);return e})},Q=n=>Object.assign({},n),V=(n,t)=>{const r=o(n)?Array.from(n):Q(n);j(t,(t,e)=>{c(n[t])&&(r[t]=e)});return r},X=(n,t)=>J(n,(n,r,e,o)=>a(r)?X(r,t):t(n,r,e,o)),Z=n=>X(Q(n),(n,t)=>a(t)?Q(t):t),$=(n,t)=>{const r=o(n)?Array.from(n):Z(n);j(t,(t,e)=>{const o=n[t];a(e)?r[t]=a(o)?$(o,e):e:r[t]=c(o)?e:o});return r},nn=n=>new Map(Object.entries(n)),tn=(n,t)=>n.forEach((r,e)=>o(r)?tn(r,t):t(r,e,n)),rn=(n,t)=>j(n,(r,e,o)=>a(e)?rn(e,t):t(r,e,o,n)),en=(n,...t)=>{try{return n(...t)}catch(n){return n}},on=(n,t=n.length)=>{const r=function(){const e=arguments;return function(){const o=[...e,...arguments];return(o.length>=t?n:r)(...o)}};return r()},un=(n,t,r=!1)=>{const e=()=>setTimeout(()=>{o=!0;clearTimeout(i)},t);let o=r;let i=r?-1:e();return function(){if(o)return o=!1,i=e(),n(...arguments)}},cn=(n,t)=>{let r=0;let e=n.length-1;let o;for(;r<=e;){const i=n[o=Math.floor(r+(e-r)/2)];if(i===t)return o;i<t?r=o+1:e=o-1}return null},fn=(n=0,t=1,r=!1)=>{const e=t-n;if(0===e)return n;const o=Math.random()*e;return n+(r?o:Math.floor(o/e*(e+1)))},an=n=>n[fn(0,n.length-1)],sn=n=>{const t=Array.from(n);let r=t.length;for(;r--;){const n=fn(0,r),e=t[r];t[r]=t[n],t[n]=e}return t};return n.isEqual=E,n.isInstanceOf=i,n.isTypeOf=t,n.isUndefined=c,n.isNil=f,n.isNumber=l,n.isString=p,n.isBoolean=m,n.isSymbol=T,n.isObject=D,n.isObjectLike=a,n.isObjectPlain=O,n.isArray=o,n.isArrayLike=s,n.isArrayBuffer=u,n.isArrayTyped=h,n.isPromise=S,n.isMap=M,n.isSet=I,n.isDate=g,n.isRegExp=k,n.isFunction=r,n.isArguments=e,n.isError=d,n.isEmpty=b,n.isIndex=A,n.hasPath=w,n.getPath=C,n.getSize=y,n.numClamp=N,n.numSum=B,n.numAverage=F,n.numMedian=P,n.arrFromDeep=q,n.arrMapDeep=_,n.arrCompact=x,n.arrChunk=R,n.arrStep=G,n.arrRemoveIndex=W,n.arrRemoveItem=Y,n.arrCount=z,n.arrCollect=v,n.arrDifference=L,n.arrIntersection=U,n.arrUniq=H,n.objFrom=Q,n.objFromDeep=Z,n.objMap=J,n.objMapDeep=X,n.objDefaults=V,n.objDefaultsDeep=$,n.objDecycle=K,n.mapFromObject=nn,n.fnThrottle=un,n.fnAttempt=en,n.fnCurry=on,n.forEachDeep=tn,n.forEachEntry=j,n.forEachEntryDeep=rn,n.algBinarySearch=cn,n.randNumber=fn,n.randItem=an,n.randShuffle=sn,n}({});
//# sourceMappingURL=lightdash.min.js.map
