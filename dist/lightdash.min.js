var _=function(n){"use strict";const t=(n,t)=>typeof n===t,r=n=>t(n,"function"),e=n=>r(n.callee),i=Number,o=Object,u=Array,c=Set,f=Map,s=Math,a=u.isArray,l=(n,t)=>n instanceof t,h=n=>l(n,ArrayBuffer),m=n=>t(n,"undefined"),p=n=>!m(n),b=(n,t)=>p(n[t]),y=n=>m(n)||null===n,g=n=>!y(n)&&t(n,"object"),E=n=>g(n)&&b(n,"length"),j=n=>t(n,"number"),D=n=>j(n.BYTES_PER_ELEMENT),d=n=>t(n,"boolean"),O=n=>l(n,Date),P=o.keys,A=n=>{if(E(n))return 0===n.length;if(b(n,"size"))return 0===n.size;if(g(n))return 0===P(n).length;return!0},I=o.entries,M=(n,t)=>n.forEach(t),T=(n,t)=>{M(I(n),(r,e)=>{t(r[0],r[1],e,n)})},F=n=>!y(n)&&(t(n,"object")||t(n,"function")),v=(n,t)=>{if(n===t)return!0;if(F(n)&&F(t)&&P(n).length===P(t).length){let r=!0;return T(n,(n,e)=>{if(!0===r)if(b(t,n)){const i=t[n];r=v(e,i)}else r=!1}),r}return!1},w=n=>l(n,Error),R=i.isInteger,S=n=>l(n,f),C=n=>F(n)&&n.constructor===o,N=n=>!F(n),k=n=>r(n.then)&&r(n.catch),x=n=>l(n,RegExp),B=n=>l(n,c),L=n=>t(n,"string"),_=n=>t(n,"symbol"),q=(n,t)=>n.hasOwnProperty(t),z=(n,t)=>{let r=n;let e=0;for(;p(r)&&e<t.length;){const n=t[e];if(!b(r,n))return null;r=r[n],e++}return r},K=(n,t)=>!y(z(n,t)),U=(n,t)=>M(n,(r,e)=>a(r)?U(r,t):t(r,e,n)),V=(n,t)=>T(n,(r,e,i)=>g(e)?V(e,t):t(r,e,i,n)),Y=(n,t,r,e)=>{for(let i=n;i<=t;i+=r)e(i)},G=(n,t)=>{if(t<1)return[];const r=[];Y(0,n.length-1,t,e=>{r.push(n.slice(e,e+t))});return r},H=n=>n.filter(n=>n),J=n=>{const t=new f;M(n,n=>t.set(n,t.has(n)?t.get(n)+1:1));return t},Q=(n,...t)=>{const r=J([].concat(...t));return n.filter(n=>!r.has(n))},W=n=>{const t=[];M(n,n=>{a(n)?t.push(...W(n)):t.push(n)});return t},X=u.from,Z=(n,t)=>n.map((r,e)=>a(r)?Z(r,t):t(r,e,n)),$=n=>Z(X(n),n=>a(n)?X(n):n),nn=(n,...t)=>{const r=J([].concat(...t));return n.filter(n=>r.has(n))},tn=(n,t,r)=>n>=t&&n<=r,rn=(n,t)=>{if(!tn(t,0,n.length-1))return n;return 0===t?n.slice(1):n.slice(0,t).concat(n.slice(t+1))},en=(n,t)=>n.includes(t)?rn(n,n.indexOf(t)):n,on=(n,t)=>n.filter((n,r)=>r%t==0),un=n=>X(new c(n)),cn=o.values,fn=(n,t)=>{const r={};T(n,(e,i,o)=>{r[e]=t(e,i,o,n)});return r},sn=(n,t)=>fn(n,(n,r,e,i)=>g(r)?sn(r,t):t(n,r,e,i)),an=o.assign,ln=n=>an({},n),hn=n=>sn(ln(n),(n,t)=>g(t)?ln(t):t),mn=(n,t)=>{const r=a(n)?X(n):ln(n);T(t,(t,e)=>{b(n,t)||(r[t]=e)});return r},pn=(n,t)=>{const r=a(n)?X(n):hn(n);T(t,(t,e)=>{const i=n[t];g(e)?r[t]=g(i)?pn(i,e):e:r[t]=m(i)?e:i});return r},bn=(n,t,r,e=!0,i=!0,u=!0)=>o.defineProperty(n,t,{value:r,enumerable:e,writable:i,configurable:u}),yn=n=>new f(I(n)),gn=(n,...t)=>{try{return n(...t)}catch(n){return n}},En=(n,t=n.length)=>{const r=function(){const e=arguments;return function(){const i=[...e,...arguments];return(i.length>=t?n:r)(...i)}};return r()},jn=(n,t,r=!1)=>{const e=()=>setTimeout(()=>{i=!0;clearTimeout(o)},t);let i=r;let o=r?-1:e();return function(){if(i)return i=!1,o=e(),n.apply(this,arguments)}},Dn=(n,t,r)=>{if(n<t)return t;if(n>r)return r;return n},dn=(n=0,t=1,r=!0)=>{const e=t-n;if(0===e)return n;const i=n+s.random()*e;return r?i:s.floor(i/e*(e+1))},On=n=>n[dn(0,n.length-1,!1)];return n.isEqual=v,n.isInstanceOf=l,n.isTypeOf=t,n.isUndefined=m,n.isDefined=p,n.isNil=y,n.isPrimitive=N,n.isNumber=j,n.isString=L,n.isBoolean=d,n.isSymbol=_,n.isObject=F,n.isObjectLike=g,n.isObjectPlain=C,n.isArray=a,n.isArrayLike=E,n.isArrayBuffer=h,n.isArrayTyped=D,n.isPromise=k,n.isMap=S,n.isSet=B,n.isDate=O,n.isRegExp=x,n.isFunction=r,n.isArguments=e,n.isError=w,n.isEmpty=A,n.isInteger=R,n.hasKey=b,n.hasPath=K,n.hasOwnProperty=q,n.getPath=z,n.forTimes=Y,n.forEach=M,n.forEachDeep=U,n.forEachEntry=T,n.forEachEntryDeep=V,n.arrFrom=X,n.arrFromDeep=$,n.arrMapDeep=Z,n.arrFlattenDeep=W,n.arrCompact=H,n.arrChunk=G,n.arrStep=on,n.arrRemoveIndex=rn,n.arrRemoveItem=en,n.arrCount=J,n.arrDifference=Q,n.arrIntersection=nn,n.arrUniq=un,n.objFrom=ln,n.objFromDeep=hn,n.objMap=fn,n.objMapDeep=sn,n.objDefaults=mn,n.objDefaultsDeep=pn,n.objMerge=an,n.objDefineProperty=bn,n.objKeys=P,n.objValues=cn,n.objEntries=I,n.mapFromObject=yn,n.fnThrottle=jn,n.fnAttempt=gn,n.fnCurry=En,n.numberInRange=tn,n.numberClamp=Dn,n.randomNumber=dn,n.randomItem=On,n}({});
//# sourceMappingURL=lightdash.min.js.map
