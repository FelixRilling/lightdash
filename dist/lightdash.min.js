var lightdash=function(e){"use strict";const r=(e,t)=>{if(e===t)return!0;if(l(e)&&l(t)&&S(e).length===S(t).length){let n=!0;return g(e,(e,a)=>{if(!0===n)if(h(t,a)){const s=t[a];n=r(e,s)}else n=!1}),n}return!1},t=(e,r)=>e instanceof r,n=(e,r)=>typeof e===r,a=e=>n(e,"undefined"),s=e=>!a(e),i=e=>a(e)||null===e,o=e=>Array.isArray(e),l=e=>t(e,Object),u=e=>!i(e)&&n(e,"object"),c=e=>h(e,"length")?0===e.length:!!u(e)&&0===S(e).length,h=(e,r)=>s(e[r]),f=(e=0,r=1)=>e+Math.random()*(r-e),b=(e,r,t,n)=>{for(let a=e;a<r;a+=t)n(a)},p=(e,r)=>e.forEach(r),m=(e,r)=>p(e,(t,n)=>o(t)?m(t,r):r(t,n,e)),g=(e,r)=>{p(N(e),(t,n)=>{r(t[1],t[0],n,e)})},j=(e,r)=>g(e,(t,n,a)=>l(t)?j(t,r):r(t,n,a,e)),y=e=>Array.from(e),E=(e,r)=>e.map(r),D=(e,r)=>E(e,(t,n)=>o(t)?D(t,r):r(t,n,e)),O=e=>{const r=[];return p(e,e=>{o(e)?r.push(...O(e)):r.push(e)}),r},d=e=>Object.assign({},e),M=(e,r)=>{const t=d(e);return g(t,(e,n,a)=>{t[n]=r(e,n,a,t)}),t},C=(e,r)=>M(e,(e,t,n,a)=>l(e)?C(e,r):r(e,t,n,a)),S=e=>Object.keys(e),N=e=>Object.entries(e);return e.isSame=((e,r)=>e===r),e.isEqual=r,e.isInstanceOf=t,e.isTypeOf=n,e.isUndefined=a,e.isDefined=s,e.isNil=i,e.isBoolean=(e=>n(e,"boolean")),e.isNumber=(e=>n(e,"number")),e.isString=(e=>n(e,"string")),e.isStringNumber=(e=>!isNaN(Number(e))),e.isSymbol=(e=>n(e,"symbol")),e.isObject=l,e.isObjectLike=u,e.isArray=o,e.isArrayLike=(e=>u(e)&&h(e,"length")),e.isMap=(e=>t(e,Map)),e.isSet=(e=>t(e,Set)),e.isDate=(e=>t(e,Date)),e.isEmpty=c,e.hasKey=h,e.hasPath=((e,r)=>{let t=e,n=0;for(;s(t)&&n<r.length;){const e=r[n];if(!h(t,e))return!1;t=t[e],n++}return!0}),e.getPath=((e,r)=>{let t=e,n=0;for(;s(t)&&n<r.length;){const e=r[n];if(!h(t,e))return null;t=t[e],n++}return t}),e.numberClamp=((e,r,t)=>e<r?r:e>t?t:e),e.numberIsInRange=((e,r,t)=>e>=r&&e<=t),e.numberRandomFloat=f,e.numberRandomInt=((e=0,r=1)=>Math.floor(f(e,r)/(r-e)*(r-e+1))),e.forTimes=b,e.forEach=p,e.forEachDeep=m,e.forEachEntry=g,e.forEachEntryDeep=j,e.arrClone=y,e.arrCloneDeep=(e=>D(y(e),e=>o(e)?y(e):e)),e.arrMap=E,e.arrMapDeep=D,e.arrFlattenDeep=O,e.arrCompact=(e=>e.filter(e=>!i(e)&&!c(e))),e.arrChunk=((e,r)=>{const t=[];if(r<=0)throw new Error("Cannot create chunks smaller than 1");return b(0,e.length,r,n=>{t.push(e.slice(n,n+r))}),t}),e.arrStep=((e,r)=>e.filter((e,t)=>t%r==0)),e.objClone=d,e.objCloneDeep=(e=>C(d(e),e=>l(e)?d(e):e)),e.objMap=M,e.objMapDeep=C,e.objKeys=S,e.objValues=(e=>Object.values(e)),e.objEntries=N,e.mapFromObject=(e=>new Map(N(e))),e}({});