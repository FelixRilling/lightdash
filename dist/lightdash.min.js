var _l=function(n){"use strict";const t=(n,t)=>typeof n===t,r=n=>t(n,"function"),e=n=>r(n.callee),o=Array.isArray,i=(n,t)=>n instanceof t,u=n=>i(n,ArrayBuffer),c=n=>t(n,"undefined"),f=n=>c(n)||null===n,a=n=>!f(n)&&t(n,"object"),s=n=>a(n)&&!c(n.length),l=n=>t(n,"number"),h=n=>l(n.BYTES_PER_ELEMENT),m=n=>t(n,"boolean"),g=n=>i(n,Date),p=n=>t(n,"string"),y=n=>{if(f(n))return-1;if(s(n)||p(n))return n.length;if(!c(n.size))return n.size;if(a(n))return Object.keys(n).length;return-1},b=n=>y(n)<1,j=(n,t)=>{Object.entries(n).forEach((r,e)=>{t(r[0],r[1],e,n)})},E=(n,t)=>{if(n===t)return!0;if(!a(n)||!a(t)||Object.keys(n).length!==Object.keys(t).length)return!1;let r=!0;j(n,(n,e)=>{!0===r&&(r=!c(t[n])&&E(e,t[n]))});return r},d=n=>i(n,Error),A=n=>Number.isInteger(n)&&n>=0,M=n=>i(n,Map),D=n=>!f(n)&&(t(n,"object")||t(n,"function")),O=n=>D(n)&&n.constructor===Object,S=n=>r(n.then)&&r(n.catch),k=n=>i(n,RegExp),I=n=>i(n,Set),T=n=>t(n,"symbol"),C=(n,t)=>{let r=n;let e=0;for(;!c(r)&&e<t.length;){const n=t[e];if(c(r[n]))return null;r=r[n],e++}return r},w=(n,t)=>!f(C(n,t)),B=(n,t)=>n.forEach((r,e)=>o(r)?B(r,t):t(r,e,n)),F=(n,t)=>j(n,(r,e,o)=>a(e)?F(e,t):t(r,e,o,n)),N=(n,t)=>{if(!A(t)||0===t)return[];const r=[];for(let e=0;e<n.length;e+=t)r.push(n.slice(e,e+t));return r},P=(n,t)=>{const r=new Map;n.forEach((e,o)=>{const i=t(e,o,n);r.set(i,r.has(i)?[...r.get(i),e]:[e])});return r},R=n=>n.filter(n=>n),v=n=>{const t=new Map;n.forEach(n=>t.set(n,t.has(n)?t.get(n)+1:1));return t},x=(n,...t)=>{const r=v([].concat(...t));return n.filter(n=>!r.has(n))},z=(n,t)=>n.map((r,e)=>o(r)?z(r,t):t(r,e,n)),L=n=>z(Array.from(n),n=>o(n)?Array.from(n):n),_=(n,...t)=>{const r=v([].concat(...t));return n.filter(n=>r.has(n))},q=(n,t)=>n.filter((n,r)=>r!==t),U=(n,t)=>n.filter(n=>n!==t),W=(n,t)=>n.filter((n,r)=>r%t==0),Y=n=>Array.from(new Set(n)),G=(n,t)=>{const r={};j(n,(e,o,i)=>{r[e]=t(e,o,i,n)});return r},H=(n,t=(()=>null),r=new WeakSet)=>{r.add(n);return G(n,(n,e,o,i)=>{if(r.has(e))return t(n,e,o,i);if(a(e))return r.add(e),H(e,t,r);return e})},J=n=>Object.assign({},n),K=(n,t)=>{const r=o(n)?Array.from(n):J(n);j(t,(t,e)=>{c(n[t])&&(r[t]=e)});return r},Q=(n,t)=>G(n,(n,r,e,o)=>a(r)?Q(r,t):t(n,r,e,o)),V=n=>Q(J(n),(n,t)=>a(t)?J(t):t),X=(n,t)=>{const r=o(n)?Array.from(n):V(n);j(t,(t,e)=>{const o=n[t];a(e)?r[t]=a(o)?X(o,e):e:r[t]=c(o)?e:o});return r},Z=n=>new Map(Object.entries(n)),$=(n,...t)=>{try{return n(...t)}catch(n){return n}},nn=(n,t=n.length)=>{const r=function(){const e=arguments;return function(){const o=[...e,...arguments];return(o.length>=t?n:r)(...o)}};return r()},tn=(n,t,r=!1)=>{const e=()=>setTimeout(()=>{o=!0;clearTimeout(i)},t);let o=r;let i=r?-1:e();return function(){if(o)return o=!1,i=e(),n(...arguments)}},rn=n=>n.reduce((n,t)=>n+t),en=n=>rn(n)/n.length,on=(n,t,r)=>{if(n<t)return t;if(n>r)return r;return n},un=n=>{const t=n.length/2;return n.length%2==0?n[t]:en(n.slice(Math.floor(t),2))},cn=(n=0,t=1,r=!1)=>{const e=t-n;if(0===e)return n;const o=Math.random()*e;return n+(r?o:Math.floor(o/e*(e+1)))},fn=n=>n[cn(0,n.length-1)],an=n=>{const t=Array.from(n);let r=t.length;for(;r--;){const n=cn(0,r),e=t[r];t[r]=t[n],t[n]=e}return t},sn=(n,t)=>{let r=0;let e=n.length-1;let o;for(;r<=e;){const i=n[o=Math.floor(r+(e-r)/2)];if(i===t)return o;i<t?r=o+1:e=o-1}return null};return n.isEqual=E,n.isInstanceOf=i,n.isTypeOf=t,n.isUndefined=c,n.isNil=f,n.isNumber=l,n.isString=p,n.isBoolean=m,n.isSymbol=T,n.isObject=D,n.isObjectLike=a,n.isObjectPlain=O,n.isArray=o,n.isArrayLike=s,n.isArrayBuffer=u,n.isArrayTyped=h,n.isPromise=S,n.isMap=M,n.isSet=I,n.isDate=g,n.isRegExp=k,n.isFunction=r,n.isArguments=e,n.isError=d,n.isEmpty=b,n.isIndex=A,n.hasPath=w,n.getPath=C,n.getSize=y,n.forEachDeep=B,n.forEachEntry=j,n.forEachEntryDeep=F,n.arrFromDeep=L,n.arrMapDeep=z,n.arrCompact=R,n.arrChunk=N,n.arrStep=W,n.arrRemoveIndex=q,n.arrRemoveItem=U,n.arrCount=v,n.arrCollect=P,n.arrDifference=x,n.arrIntersection=_,n.arrUniq=Y,n.objFrom=J,n.objFromDeep=V,n.objMap=G,n.objMapDeep=Q,n.objDefaults=K,n.objDefaultsDeep=X,n.objDecycle=H,n.mapFromObject=Z,n.fnThrottle=tn,n.fnAttempt=$,n.fnCurry=nn,n.numClamp=on,n.numSum=rn,n.numAverage=en,n.numMedian=un,n.randNumber=cn,n.randItem=fn,n.randShuffle=an,n.algBinarySearch=sn,n}({});
//# sourceMappingURL=lightdash.min.js.map
